//
//  Session.swift
//  clitnt-server-1641
//
//  Created by maxim on 21.10.2021.
//

import Foundation


// подробные записи делаются в виде конспекта проговаривание способствует обучению и пониманию что происходит ну и последовательность действий


// Класс Одиночка предоставляет поле `shared`, которое позволяет клиентам
// получать доступ к уникальному экземпляру одиночки.



//final - означает что мы финализируем класс тоесть мы не сможем его в другом месте переопределить  override не прокатит

final class Session {
    // Инициализатор Одиночки всегда должен быть скрытым, чтобы предотвратить
    // прямое создание объекта через инициализатор.
    // private говорит нам о том что инициализация будет доступна только внутри этого класса
    
    
    //как правило shared общепринятое для читабельности (хороший тон)
    static let shared = Session()
    // static говорит нам что "let sessionAccaunt" Константа "sessionAccaunt" будет обьявлена как Свойство КЛАССА тоесть оно одно и любые сылки и изменения (если это переменная static var) будет изменятся у всех сразу
    // преподователь!!! : хранится в стстической памяти ? не убиваемый обьект который всегда висит в памяти
    
    var token: String = "test token for class Session"
    var userId: Int = 0
    
    private init() {}
    
}

// Одиночки не должны быть клонируемыми.
extension Session: NSCopying {
    
    func copy(with zone: NSZone? = nil) -> Any {
        return self
    }
}

